{"version":3,"sources":["webpack://prsdigg/./node_modules/prismjs/components/prism-processing.js"],"names":["Prism","languages","processing","extend","insertBefore","pattern","alias"],"mappings":"uFAAAA,MAAMC,UAAUC,WAAaF,MAAMC,UAAUE,OAAO,QAAS,CAC5D,QAAW,qKACX,SAAY,8CAEbH,MAAMC,UAAUG,aAAa,aAAc,SAAU,CAEpD,SAAY,8BACZ,KAAQ,CACPC,QAAS,4DACTC,MAAO,cAKTN,MAAMC,UAAUC,WAAqB,SAAI,eAGzCF,MAAMC,UAAUC,WAAW,cAAcI,MAAQ","file":"js/7353-d1e9a7eff2dc7cdbaa18.chunk.js","sourcesContent":["Prism.languages.processing = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n\t'operator': /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n});\nPrism.languages.insertBefore('processing', 'number', {\n\t// Special case: XML is a type\n\t'constant': /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n\t'type': {\n\t\tpattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n\t\talias: 'variable'\n\t}\n});\n\n// Spaces are allowed between function name and parenthesis\nPrism.languages.processing['function'] = /\\w+(?=\\s*\\()/;\n\n// Class-names is not styled by default\nPrism.languages.processing['class-name'].alias = 'variable';\n"],"sourceRoot":""}